version: '3.9'

services:

  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    ports:
      - '6379:6379'

  redis-slave:
    image: redis:7-alpine
    container_name: redis-slave
    command: redis-server --slaveof redis-master 6379
    ports:
      - '6380:6379'
    depends_on:
      - redis-master

  redis-sentinel-1:
    image: redis:7-alpine
    volumes:
      - ./config/redis-sentinel/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --sentinel
    depends_on:
      - redis-master
      - redis-slave
    ports:
      - '26379:26379'

  telegraf:
    image: telegraf:alpine
    container_name: telegraf
    restart: always
    volumes:
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - '8125:8125/udp'
    depends_on:
      influxdb:
        condition: service_healthy

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=qwerty123qwerty123
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=qwerty123qwerty123
    ports:
      - '8086:8086'
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:8086/health" ]
      interval: 5s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana-oss
    container_name: grafana-server
    restart: always
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource,grafana-clock-panel,natel-discrete-panel
    ports:
      - '3000:3000'
    depends_on:
      influxdb:
        condition: service_healthy
      telegraf:
        condition: service_started

  siege:
    image: jstarcher/siege
    container_name: siege
    profiles:
      - siege
    command: -c 10 -t 30m http://nginx:8080/root/xor/random
